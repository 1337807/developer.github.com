<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://developer.github.com/</id>
  <title>GitHub API Changes</title>
  <updated>2014-04-04T07:00:00Z</updated>
  <link rel="alternate" href="http://developer.github.com/" />
  <link rel="self" href="http://developer.github.com/changes.atom" />
  <author>
    <name>technoweenie</name>
    <uri>https://github.com/technoweenie</uri>
  </author>
  <entry>
    <id>tag:developer.github.com,2014-04-04:/changes/2014-04-04-create-public-repo-without-repo-scope/</id>
    <title type="html">Grant access to create public repositories without granting access to private repositories</title>
    <published>2014-04-04T07:00:00Z</published>
    <updated>2014-04-04T07:00:00Z</updated>
    <author>
      <name>pengwynn</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-04-04-create-public-repo-without-repo-scope/" />
    <content type="html">&lt;p&gt;The &lt;a href="/v3/repos/#create"&gt;Create Repository method&lt;/a&gt; now allows creating public repositories via
OAuth with &lt;code&gt;public_repo&lt;/code&gt; &lt;a href="/v3/oauth/#scopes"&gt;scope&lt;/a&gt;.  This means you can safely grant third
party applications the ability to create public repositories on your behalf
without granting access to your private repositories.&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=API+create+repositories+with+public_repo+scope"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-03-27:/changes/2014-03-27-combined-status-api/</id>
    <title type="html">Preview the New Combined Status API</title>
    <published>2014-03-27T07:00:00Z</published>
    <updated>2014-03-27T07:00:00Z</updated>
    <author>
      <name>bhuga</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-03-27-combined-status-api/" />
    <content type="html">&lt;p&gt;What does it mean for a branch to be “green?” The &lt;a href="/v3/repos/statuses/"&gt;Status API&lt;/a&gt; helps
thousands of teams answer that question. Developers use it to record the status
of continuous integration builds, contributor license agreements, code coverage
analysis, automated security testing, dependency management, and more.&lt;/p&gt;

&lt;p&gt;For many teams, a branch is considered “green” only when &lt;em&gt;all&lt;/em&gt; of their various
status checks are successful. With the new &lt;a href="/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref"&gt;Combined Status
API&lt;/a&gt;, developers can easily fetch this single, consolidated
status for any branch, commit, or tag.&lt;/p&gt;

&lt;h3 id="status-context"&gt;Status context&lt;/h3&gt;

&lt;p&gt;To help multiple service providers use the Status API simultaneously, statuses
now support a &lt;code&gt;context&lt;/code&gt; field. This field allows a provider to distinguish its
statuses from another provider’s statuses. For example, your &lt;a href="http://jenkins-ci.org/"&gt;Jenkins&lt;/a&gt; builds
might use a context of &lt;code&gt;ci/jenkins&lt;/code&gt;, while your &lt;a href="http://brakemanscanner.org/"&gt;Brakeman&lt;/a&gt; checks might adopt a
context of &lt;code&gt;security/brakeman&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The new &lt;a href="/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref"&gt;Combined Status endpoint&lt;/a&gt; returns a single,
combined state, as well as the latest status from each context. Systems that
consume status updates can now get all the information they need in one place.&lt;/p&gt;

&lt;h3 id="opt-in"&gt;Opt-in&lt;/h3&gt;

&lt;p&gt;The existing &lt;a href="/v3/repos/statuses/#list-statuses-for-a-specific-ref"&gt;Status API&lt;/a&gt; continues to work as it always has. The
&lt;code&gt;context&lt;/code&gt; field is entirely optional, and the &lt;a href="https://github.com/blog/1227-commit-status-api"&gt;color of the merge button on pull
requests&lt;/a&gt; does not currently
take context into account.&lt;/p&gt;

&lt;h3 id="preview-period"&gt;Preview period&lt;/h3&gt;

&lt;p&gt;We’re making this new API available today for developers to
&lt;a href="/v3/repos/statuses/"&gt;preview&lt;/a&gt;. During this period, we may change aspects of the Combined
Status API from time to time. We will announce any changes here (on the
developer blog), but we will not provide any advance notice.&lt;/p&gt;

&lt;p&gt;We expect the preview period to last 30-60 days. At the end of preview period,
the Combined Status API will become an official component of GitHub API v3. At
that point, this new API will be stable and suitable for production use.&lt;/p&gt;

&lt;p&gt;We hope you’ll &lt;a href="/v3/repos/statuses/"&gt;try it out&lt;/a&gt; and &lt;a href="https://github.com/contact?form%5Bsubject%5D=Combined+Status+API"&gt;send us your feedback&lt;/a&gt;!&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-03-18:/changes/2014-03-18-paginating-method-changes/</id>
    <title type="html">Pagination changes for some resource lists</title>
    <published>2014-03-18T07:00:00Z</published>
    <updated>2014-03-18T07:00:00Z</updated>
    <author>
      <name>pengwynn</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-03-18-paginating-method-changes/" />
    <content type="html">&lt;p&gt;In an effort to keep the API fast for everyone, we’re enabling
&lt;a href="/v3/#pagination"&gt;pagination&lt;/a&gt; on some API methods that previously did not support it.
Beginning today, the methods below will paginate if you include &lt;code&gt;page&lt;/code&gt; or
&lt;code&gt;per_page&lt;/code&gt; query parameters. Starting April 17th, 2014, these methods will
&lt;em&gt;always&lt;/em&gt; return &lt;a href="/v3/#pagination"&gt;paginated results&lt;/a&gt;. If you have any questions or
run into trouble, feel free to &lt;a href="https://github.com/contact?form%5Bsubject%5D=API+v3:+Pagination+changes"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here’s the complete list of updated methods:&lt;/p&gt;

&lt;h4 id="gist-comments"&gt;&lt;a href="/v3/gists/comments/#list-comments-on-a-gist"&gt;Gist comments&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /gists/:gist_id/comments
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="gist-commits"&gt;&lt;a href="/v3/gists/#list-gist-commits"&gt;Gist commits&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /gists/:gist_id/commits
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="gist-forks"&gt;&lt;a href="/v3/gists/#list-gist-forks"&gt;Gist forks&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /gists/:gist_id/forks
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="git-refs"&gt;&lt;a href="/v3/git/refs/#get-all-references"&gt;Git refs&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/git/refs
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="issue-labels"&gt;&lt;a href="/v3/issues/labels/#list-labels-on-an-issue"&gt;Issue labels&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/labels/:number/labels
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="milestone-labels"&gt;&lt;a href="/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone"&gt;Milestone labels&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/milestones/:id/labels
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="organization-teams"&gt;&lt;a href="/v3/orgs/teams/#list-teams"&gt;Organization teams&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /orgs/:org/teams
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="pull-request-commits"&gt;&lt;a href="/v3/pulls/#list-commits-on-a-pull-request"&gt;Pull Request commits&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/pulls/:number/commits
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="pull-request-files"&gt;&lt;a href="/v3/pulls/#list-pull-requests-files"&gt;Pull Request files&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/pulls/:number/files
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="release-assets"&gt;&lt;a href="/v3/repos/releases/#list-assets-for-a-release"&gt;Release assets&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/releases/:id/assets
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="repository-collaborators"&gt;&lt;a href="/v3/repos/collaborators/#list"&gt;Repository collaborators&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/collaborators
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="repository-contributors"&gt;&lt;a href="/v3/repos/#list-contributors"&gt;Repository contributors&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/contributors
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="repository-branches"&gt;&lt;a href="/v3/repos/#list-branches"&gt;Repository branches&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/branches
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="repository-downloads"&gt;&lt;a href="/v3/repos/downloads/#list-downloads-for-a-repository"&gt;Repository downloads&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/downloads
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="repository-keys"&gt;&lt;a href="/v3/repos/keys/#list"&gt;Repository keys&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/keys
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="repository-labels"&gt;&lt;a href="/v3/issues/labels/#list-all-labels-for-this-repository"&gt;Repository labels&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/labels
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="repository-tags"&gt;&lt;a href="/v3/repos/#list-tags"&gt;Repository tags&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/tags
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="repository-teams"&gt;&lt;a href="/v3/repos/#list-teams"&gt;Repository teams&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/teams
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="team-members"&gt;&lt;a href="/v3/orgs/teams/#list-team-members"&gt;Team members&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /teams/:id/members
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="team-repositories"&gt;&lt;a href="/v3/orgs/teams/#list-team-repos"&gt;Team repositories&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /teams/:id/repos
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="user-emails-v3-media-type-only"&gt;
&lt;a href="/v3/users/emails/#future-response"&gt;User emails&lt;/a&gt; (v3 media type only)&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /users/:user/emails
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="user-keys"&gt;&lt;a href="/v3/users/keys/#list-public-keys-for-a-user"&gt;User keys&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /users/:user/keys
GET /user/keys
&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-03-12:/changes/2014-03-12-page-build-event-for-webhooks/</id>
    <title type="html">Page Build Event for Webhooks</title>
    <published>2014-03-12T07:00:00Z</published>
    <updated>2014-03-12T07:00:00Z</updated>
    <author>
      <name>benbalter</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-03-12-page-build-event-for-webhooks/" />
    <content type="html">&lt;p&gt;We’ve made it even easier to track the status of your &lt;a href="http://pages.github.com/"&gt;GitHub Pages&lt;/a&gt; builds. By subscribing to the new &lt;a href="/v3/activity/events/types/#pagebuildevent"&gt;&lt;code&gt;page_build&lt;/code&gt;&lt;/a&gt; event, your application will receive an event payload containing the results of each build. (As always, these builds occur automatically following each push to a GitHub Pages-enabled branch.)&lt;/p&gt;

&lt;p&gt;If you have a &lt;a href="/webhooks/"&gt;webhook&lt;/a&gt; with the &lt;a href="https://github.com/blog/1778-webhooks-level-up"&gt;“send me everything” option&lt;/a&gt; selected (or if you use the “&lt;a href="/changes/2014-02-24-wildcard-event-for-webhooks/"&gt;wildcard event&lt;/a&gt;” via the API), you will receive the &lt;code&gt;page_build&lt;/code&gt; event after the next build of your GitHub Pages site. Alternatively, if you prefer to subscribe to specific event types, you can add to the new &lt;code&gt;page_build&lt;/code&gt; event to your webhooks via your repository’s webhook settings page or via the &lt;a href="/v3/repos/hooks/"&gt;webhooks API&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For more information, be sure to check out our guide on &lt;a href="/webhooks/"&gt;working with webhooks&lt;/a&gt;. If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=API+Page+Build+Event"&gt;drop us a line&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-03-05:/changes/2014-03-05-reminder-about-upcoming-cutover-test/</id>
    <title type="html">Reminder: March 12 Cutover Test for Default Media Type</title>
    <published>2014-03-05T08:00:00Z</published>
    <updated>2014-03-05T08:00:00Z</updated>
    <author>
      <name>jasonrudolph</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-03-05-reminder-about-upcoming-cutover-test/" />
    <content type="html">&lt;p&gt;In January, we announced an &lt;a href="/changes/2014-01-07-upcoming-change-to-default-media-type/"&gt;upcoming change to the default media type&lt;/a&gt;. To help developers assess the impact of that change before it becomes permanent, we’re performing a &lt;a href="/changes/2014-01-07-upcoming-change-to-default-media-type/#cutover-test"&gt;24-hour cutover test next week&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;From approximately 12:01am UTC to 11:59pm UTC on March 12, the API will &lt;a href="/changes/2014-01-07-upcoming-change-to-default-media-type/#whats-changing"&gt;respond with the v3 media type by default&lt;/a&gt;. (See the &lt;a href="http://www.timeanddate.com/worldclock/fixedtime.html?iso=20140312T00&amp;amp;p1=1440"&gt;start time for the cutover test in your time zone&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;Follow &lt;a href="https://twitter.com/GitHubAPI"&gt;@GitHubAPI&lt;/a&gt; to receive updates before and after the test.&lt;/p&gt;

&lt;p&gt;Please see the &lt;a href="/changes/2014-01-07-upcoming-change-to-default-media-type/"&gt;original announcement&lt;/a&gt; for full details. If you have any questions, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Upcoming+change+to+default+API+media+type"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-03-04:/changes/2014-03-04-timezone-handling-changes/</id>
    <title type="html">Improved timezone handling in the API</title>
    <published>2014-03-04T08:00:00Z</published>
    <updated>2014-03-04T08:00:00Z</updated>
    <author>
      <name>dbussink</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-03-04-timezone-handling-changes/" />
    <content type="html">&lt;p&gt;We have improved support for handling timezones in our API. For example, if you
create commits through the API, we now allow for specifying timezone information
more accurately.&lt;/p&gt;

&lt;p&gt;We apply the following rules, in order of priority, to determine timezone
information for API calls:&lt;/p&gt;

&lt;h4 id="explicitly-provide-an-iso-8601-timestamp-with-timezone-information"&gt;Explicitly provide an ISO 8601 timestamp with timezone information&lt;/h4&gt;

&lt;p&gt;For API calls that allow for a timestamp to be specified, we use that exact
timestamp. An example of this is the &lt;a href="/v3/git/commits"&gt;Commits API&lt;/a&gt; which allows
for specifying the &lt;code&gt;date&lt;/code&gt; property.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-javascript"&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;"message"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"my commit message"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"author"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"Dirkjan Bussink"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"email"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"d.bussink@gmail.com"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"date"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"2014-02-27T15:05:06+01:00"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="s2"&gt;"parents"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;"7d1b31e74ee336d15cbd21741bc88a537ed063a0"&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="s2"&gt;"tree"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"827efc6d56897b048c772eb4087f854f46256132"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="using-the-time-zone-header"&gt;Using the &lt;code&gt;Time-Zone&lt;/code&gt; header&lt;/h4&gt;

&lt;p&gt;It is possible to supply a &lt;code&gt;Time-Zone&lt;/code&gt; header which defines a timezone according
to the &lt;a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones"&gt;list of names from the Olson database&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl -H "Time-Zone: Europe/Amsterdam" -X POST https://api.github.com/repos/github/linguist/contents/new_file.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This means that we generate a timestamp for the moment your API call is made in
the timezone this header defines. For example, the &lt;a href="/v3/repos/contents/"&gt;Contents API&lt;/a&gt;
generates a git commit for each addition or change and uses the current time
as the timestamp. This header will determine the timezone used for generating
that current timestamp.&lt;/p&gt;

&lt;h4 id="using-the-last-known-timezone-for-the-user"&gt;Using the last known timezone for the user&lt;/h4&gt;

&lt;p&gt;If no &lt;code&gt;Time-Zone&lt;/code&gt; header is specified and you make an authenticated call to the
API, we use the last known timezone for the authenticated user. The last know
timezone is updated whenever you browse the GitHub.com website.&lt;/p&gt;

&lt;h4 id="utc"&gt;UTC&lt;/h4&gt;

&lt;p&gt;If the steps above don’t result in any information, we use UTC as the timezone
to create the git commit.&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback, don’t hesitate to &lt;a href="https://github.com/contact?form%5Bsubject%5D=API+timezones"&gt;contact&lt;/a&gt; us!&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-03-03:/changes/2014-03-03-deployments-api-updates/</id>
    <title type="html">New Payload Format for Deployments</title>
    <published>2014-03-03T08:00:00Z</published>
    <updated>2014-03-03T08:00:00Z</updated>
    <author>
      <name>atmos</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-03-03-deployments-api-updates/" />
    <content type="html">&lt;p&gt;As we &lt;a href="/changes/2014-01-09-preview-the-new-deployments-api/"&gt;iterate on the preview&lt;/a&gt; for the new Deployment API, we’re making sure that it’s friendly to work with for the apps built on top of it.&lt;/p&gt;

&lt;h2 id="deserialize-deployment-payloads"&gt;Deserialize Deployment Payloads&lt;/h2&gt;

&lt;p&gt;To make the API even easier to use, we’ll now return your custom payload as a JSON object along with the rest of the Deployment resource. No need to parse it as JSON again.&lt;/p&gt;

&lt;h2 id="code-you-need-to-update"&gt;Code You Need to Update&lt;/h2&gt;

&lt;p&gt;You should only need to remove the JSON parsing if you’re taking advantage of the custom payloads. The formats for creating Deployments remain unchanged.&lt;/p&gt;

&lt;p&gt;As always, if you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Deployments+API"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-02-28:/changes/2014-02-28-issue-and-pull-query-enhancements/</id>
    <title type="html">Query enhancements for listing issues and pull requests</title>
    <published>2014-02-28T08:00:00Z</published>
    <updated>2014-02-28T08:00:00Z</updated>
    <author>
      <name>pengwynn</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-02-28-issue-and-pull-query-enhancements/" />
    <content type="html">&lt;p&gt;We’ve made it even easier to list all &lt;a href="/v3/issues/#list-issues"&gt;issues&lt;/a&gt; and &lt;a href="/v3/pulls/#list-pull-requests"&gt;pull requests&lt;/a&gt; via the API.
The &lt;code&gt;state&lt;/code&gt; parameter now supports a value of &lt;code&gt;all&lt;/code&gt; that will return issues and
pull requests regardless of state.&lt;/p&gt;

&lt;pre class="terminal"&gt;
$ curl https://api.github.com/repos/atom/vim-mode/issues\?state\=all
&lt;/pre&gt;

&lt;p&gt;We’ve also introduced new sorting options for &lt;a href="/v3/pulls/#list-pull-requests"&gt;listing pull requests&lt;/a&gt;. You can now sort pull requests by &lt;code&gt;created&lt;/code&gt;, &lt;code&gt;updated&lt;/code&gt;,
&lt;code&gt;popularity&lt;/code&gt;, and &lt;code&gt;long-running&lt;/code&gt;.&lt;/p&gt;

&lt;pre class="terminal"&gt;
$ curl https://api.github.com/repos/rails/rails/pulls\?sort\=long-running\&amp;amp;direction\=desc
&lt;/pre&gt;

&lt;p&gt;Happy querying. If you have any questions or feedback &lt;a href="https://github.com/contact?form%5Bsubject%5D=API+query+enhancements"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-02-25:/changes/2014-02-25-organization-oauth-scopes/</id>
    <title type="html">OAuth scopes for organization and team resources</title>
    <published>2014-02-25T08:00:00Z</published>
    <updated>2014-02-25T08:00:00Z</updated>
    <author>
      <name>pengwynn</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-02-25-organization-oauth-scopes/" />
    <content type="html">&lt;p&gt;As a follow up to &lt;a href="http://developer.github.com/changes/2014-02-24-finer-grained-scopes-for-ssh-keys/"&gt;the new scopes&lt;/a&gt; we announced yesterday, we’ve
introduced even more OAuth scopes for working with organization and team
resources:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;read:org&lt;/code&gt; provides read-only access to organizations, teams, and membership.&lt;/li&gt;
  &lt;li&gt;
&lt;code&gt;write:org&lt;/code&gt; allows an application to publicize and unpublicize an organization membership.&lt;/li&gt;
  &lt;li&gt;
&lt;code&gt;admin:org&lt;/code&gt; enables an application to fully manage organizations, teams, and memberships.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Check out &lt;a href="/v3/oauth/#scopes"&gt;the full list of OAuth scopes&lt;/a&gt; supported by the API to
ensure your application asks for only the permissions it needs. As always, if
you have any questions or feedback, &lt;a href="https://github.com/contact?form%5Bsubject%5D=API+org+scopes"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-02-24:/changes/2014-02-24-wildcard-event-for-webhooks/</id>
    <title type="html">Wildcard Event for Webhooks</title>
    <published>2014-02-24T08:00:00Z</published>
    <updated>2014-02-24T08:00:00Z</updated>
    <author>
      <name>kdaigle</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-02-24-wildcard-event-for-webhooks/" />
    <content type="html">&lt;p&gt;We’ve made a small change to make it easier for webhook integrators to receive “everything”.
Instead of adding every event to your webhook, you can now opt-in to all events (including
all new events in the future) by using the &lt;a href="/webhooks/#wildcard-event"&gt;wildcard event&lt;/a&gt; (&lt;code&gt;*&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;If you add this event to an existing webhook, we’ll remove the existing specific events and
send you payloads for all supported events. As we add new events, you’ll automatically
begin receiving those too.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-02-24:/changes/2014-02-24-finer-grained-scopes-for-ssh-keys/</id>
    <title type="html">Finer-grained OAuth scopes for SSH keys</title>
    <published>2014-02-24T08:00:00Z</published>
    <updated>2014-02-24T08:00:00Z</updated>
    <author>
      <name>pengwynn</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-02-24-finer-grained-scopes-for-ssh-keys/" />
    <content type="html">&lt;p&gt;As &lt;a href="https://github.com/blog/1786-enhanced-oauth-security-for-ssh-keys"&gt;we announced&lt;/a&gt;, we’ve made some important changes to the way that API consumers manage SSH keys.&lt;/p&gt;

&lt;h2 id="finer-grained-oauth-scopes"&gt;Finer-grained OAuth scopes&lt;/h2&gt;

&lt;p&gt;To help third party applications request only permissions that they need, the API now supports three new &lt;a href="/v3/oauth/#scopes"&gt;scopes&lt;/a&gt; for working with a user’s public SSH keys.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;read:public_key&lt;/code&gt; provides read access to the user’s SSH keys&lt;/li&gt;
  &lt;li&gt;
&lt;code&gt;write:public_key&lt;/code&gt; allows an app to read existing keys and create new ones&lt;/li&gt;
  &lt;li&gt;
&lt;code&gt;admin:public_key&lt;/code&gt; enables an app to read, write, and delete keys&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id="changes-to-user-scope"&gt;Changes to &lt;code&gt;user&lt;/code&gt; scope&lt;/h2&gt;

&lt;p&gt;Historically, &lt;code&gt;user&lt;/code&gt; scope has provided full access to manage a user’s SSH keys. Now that we have dedicated scopes for managing a user’s SSH keys, we have removed those permissions from the &lt;code&gt;user&lt;/code&gt; scope. Now &lt;code&gt;user&lt;/code&gt; scope will no longer provide access to SSH keys. Applications that need this access should request one of the new scopes described above.&lt;/p&gt;

&lt;h2 id="keys-are-now-immutable"&gt;Keys are now immutable&lt;/h2&gt;

&lt;p&gt;To simplify the security audit trail for SSH keys, we’re making keys immutable. API consumers can continue to create keys and delete keys as needed, but keys can no longer be changed. To change an existing key, API consumers should delete the existing key and create a new one with the desired attributes. This change applies both to a &lt;a href="/v3/users/keys/"&gt;user’s SSH keys&lt;/a&gt; and a &lt;a href="/v3/repos/keys/"&gt;repository’s deploy keys&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="deleting-keys-when-revoking-a-token"&gt;Deleting keys when revoking a token&lt;/h2&gt;

&lt;p&gt;Also any keys created via an OAuth token from this point forward will be deleted when that token is revoked.&lt;/p&gt;

&lt;p&gt;As always, if you have any questions or feedback, &lt;a href="https://github.com/contact?form%5Bsubject%5D=API+improvements+for+SSH+keys"&gt;please get in touch&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-02-21:/changes/2014-02-21-gist-raw-file-url-change/</id>
    <title type="html">Gist raw file URI change</title>
    <published>2014-02-21T08:00:00Z</published>
    <updated>2014-02-21T08:00:00Z</updated>
    <author>
      <name>spicycode</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-02-21-gist-raw-file-url-change/" />
    <content type="html">&lt;p&gt;The raw host for all Gist files is changing immediately.  This change was made to further isolate user content from trusted GitHub applications.
The new host is &lt;code&gt;https://gist.githubusercontent.com&lt;/code&gt;.  Existing URIs will redirect to the new host.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-02-20:/changes/2014-02-19-repo-contributors-for-empty-repos/</id>
    <title type="html">Repository Contributors and Empty Repositories</title>
    <published>2014-02-20T08:00:00Z</published>
    <updated>2014-02-20T08:00:00Z</updated>
    <author>
      <name>izuzak</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-02-19-repo-contributors-for-empty-repos/" />
    <content type="html">&lt;p&gt;We’ve made a small change to the &lt;a href="/v3/repos/#list-contributors"&gt;Repository Contributors API&lt;/a&gt; in the way empty repositories are handled. Previously, the API returned a &lt;code&gt;404 Not Found&lt;/code&gt; status when the list of contributors was fetched for an empty repository. To improve consistency with other API endpoints and reduce confusion, the API now returns a &lt;code&gt;204 No Content&lt;/code&gt; status instead.&lt;/p&gt;

&lt;p&gt;If you notice any strangeness, &lt;a href="https://github.com/contact?form%5Bsubject%5D=APIv3"&gt;just let us know&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-02-13:/changes/2014-02-13-exposing-the-page-api/</id>
    <title type="html">Introducing the Pages API</title>
    <published>2014-02-13T08:00:00Z</published>
    <updated>2014-02-13T08:00:00Z</updated>
    <author>
      <name>gjtorikian</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-02-13-exposing-the-page-api/" />
    <content type="html">&lt;p&gt;We’ve created &lt;a href="/v3/repos/pages/"&gt;a new API to GitHub Pages&lt;/a&gt;. This API is accessible
by owners of a Pages repo, whether it’s owned by an individual or an organization.&lt;/p&gt;

&lt;p&gt;With the Pages API, you can get information about your site, as well as details
on previous Pages builds.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-02-10:/changes/2014-2-10-ping-event-for-webhooks/</id>
    <title type="html">Ping Event for Webhooks</title>
    <published>2014-02-10T08:00:00Z</published>
    <updated>2014-02-10T08:00:00Z</updated>
    <author>
      <name>kdaigle</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-2-10-ping-event-for-webhooks/" />
    <content type="html">&lt;p&gt;With the release of our &lt;a href="https://github.com/blog/1778-webhooks-level-up"&gt;new webhook UI&lt;/a&gt;, we included a new
&lt;a href="/webhooks/#ping-event"&gt;ping event&lt;/a&gt; that webhooks will receive. When you
create a new webhook, we will send this event as an initial test of the webhook.&lt;/p&gt;

&lt;p&gt;The ping is only informational, doesn’t need to be responded to in a specific way,
and nothing bad will happen if you respond with an error. It’s just a quick
“hello world” to let you know you set everything up correctly.&lt;/p&gt;

&lt;p&gt;We also added a &lt;a href="/v3/repos/hooks/#ping-a-hook"&gt;ping endpoint&lt;/a&gt; to the hooks API.
By using ping instead of &lt;a href="/v3/repos/hooks/#test-a-push-hook"&gt;test&lt;/a&gt;, you can ensure
you won’t be limited by the &lt;code&gt;push&lt;/code&gt; event requirement that the test endpoint has.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-02-10:/changes/2014-02-10-repo-hook-scopes/</id>
    <title type="html">New scopes for managing repository hooks</title>
    <published>2014-02-10T08:00:00Z</published>
    <updated>2014-02-10T08:00:00Z</updated>
    <author>
      <name>pengwynn</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-02-10-repo-hook-scopes/" />
    <content type="html">&lt;p&gt;Many third party services need to set up &lt;a href="http://developer.github.com/v3/repos/hooks/"&gt;hooks&lt;/a&gt; in order to act upon events
in your repositories. Today, we’ve introduced three new &lt;a href="http://developer.github.com/v3/oauth/#scopes"&gt;scopes&lt;/a&gt; that provide
more granular access to your repository hooks without allowing access to your
repository contents:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;read:repo_hook&lt;/code&gt; grants read and ping access to hooks in public or private repositories.&lt;/li&gt;
  &lt;li&gt;
&lt;code&gt;write:repo_hook&lt;/code&gt; grants read, write, and ping access to hooks in public or private repositories.&lt;/li&gt;
  &lt;li&gt;
&lt;code&gt;admin:repo_hook&lt;/code&gt; grants read, write, ping, and delete access to hooks in public or private repositories.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;As always, if you have any questions or feedback, &lt;a href="https://github.com/contact?form%5Bsubject%5D=API+repo+hook+scopes"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-01-29:/changes/2014-01-29-audit-org-members-for-2fa/</id>
    <title type="html">Audit organization members for two-factor authentication</title>
    <published>2014-01-29T08:00:00Z</published>
    <updated>2014-01-29T08:00:00Z</updated>
    <author>
      <name>pengwynn</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-01-29-audit-org-members-for-2fa/" />
    <content type="html">&lt;p&gt;We’ve added a &lt;a href="/v3/orgs/members/#audit-two-factor-auth"&gt;new filter&lt;/a&gt; for listing members of an organization without
&lt;a href="https://github.com/blog/1614-two-factor-authentication"&gt;two-factor authentication&lt;/a&gt; enabled:&lt;/p&gt;

&lt;pre class="terminal"&gt;
$ curl -H "Authorization: token [yours]" \
       https://api.github.com/orgs/[orgname]/members\?filter\=2fa_disabled
&lt;/pre&gt;

&lt;p&gt;The new filter is available for owners of organizations with private
repositories. Happy auditing and &lt;a href="https://github.com/contact?form%5Bsubject%5D=API+2FA+filter"&gt;send us your feedback or questions&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-01-09:/changes/2014-01-09-preview-the-new-deployments-api/</id>
    <title type="html">Preview the New Deployments API</title>
    <published>2014-01-09T08:00:00Z</published>
    <updated>2014-01-09T08:00:00Z</updated>
    <author>
      <name>atmos</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-01-09-preview-the-new-deployments-api/" />
    <content type="html">&lt;p&gt;Today we’re excited to announce a &lt;a href="/v3/repos/deployments/"&gt;Deployments API&lt;/a&gt;. We ship a lot of
software at GitHub: web, mobile, and native. For the last few years, we’ve been
driving our deployments from our &lt;a href="https://speakerdeck.com/jnewland/chatops"&gt;ChatOps tooling&lt;/a&gt; and we’ve learned a
lot. The Deployments API is a generalization of the approach that we’ve been
taking, and we’re really excited to see what our users and integrations start
building around it.&lt;/p&gt;

&lt;p&gt;Deployments are a new model in the GitHub ecosystem. We don’t have any UI
components currently, and deployments are intended to be used exclusively by
tooling.  If you’re familiar with the Status API, you know that it allows
various tools to report on the status of a commit (e.g., the progress of an
attempt to perform a build at a particular commit). The Status API doesn’t
perform the build; it just reports the results. Much like the Status API, we
won’t be doing actual deployments for you. Instead, the API provides a way for
you to track the status of your deployments. We’re hoping to provide
consistency across the various type of release processes, regardless of the
underlying steps involved with getting your code built or shipped to your
servers.&lt;/p&gt;

&lt;h2 id="highlights"&gt;Highlights&lt;/h2&gt;

&lt;h3 id="automatic-merging"&gt;Automatic Merging&lt;/h3&gt;

&lt;p&gt;The system can auto-merge the default branch for the repository if the
requested deployment ref is behind the default branch. On active projects it’s
easy to fall behind, so let automation watch your back.&lt;/p&gt;

&lt;h3 id="commit-status-integration"&gt;Commit Status Integration&lt;/h3&gt;

&lt;p&gt;By default, the system rejects deployment requests for repositories that have
commit statuses but don’t have a green build for the deployment ref. This can
be bypassed, but is useful in cases where continuous integration is being used.&lt;/p&gt;

&lt;h3 id="force-deployments"&gt;Force Deployments&lt;/h3&gt;

&lt;p&gt;Sometimes the world crashes down on you, and you need to just get the code out
the door.  Forced deployments bypass any commit status checks or ahead/behind
checks in the repository.&lt;/p&gt;

&lt;h3 id="deployment-statuses"&gt;Deployment Statuses&lt;/h3&gt;

&lt;p&gt;Different deployment systems can update the status of a deployment to be
&lt;code&gt;pending&lt;/code&gt;, &lt;code&gt;success&lt;/code&gt;, &lt;code&gt;failure&lt;/code&gt;, or &lt;code&gt;error&lt;/code&gt;. There’s also a field for linking
to deployment output.&lt;/p&gt;

&lt;h3 id="events"&gt;Events&lt;/h3&gt;

&lt;p&gt;Both Deployments and Deployment Statuses trigger events on GitHub. 3rd party
integrations can listen for these events via &lt;a href="/v3/repos/hooks/"&gt;webhooks&lt;/a&gt; and choose
whether or not to actually deploy the repository that the event was created for.&lt;/p&gt;

&lt;h2 id="preview-period"&gt;Preview Period&lt;/h2&gt;

&lt;p&gt;We’re making this new API available today for developers to
&lt;a href="/v3/repos/deployments/#preview-mode" data-proofer-ignore=""&gt;preview&lt;/a&gt;.  We think developers and existing integrations are
going to love it, but we want to &lt;a href="https://github.com/contact?form%5Bsubject%5D=Deployments+API"&gt;get your feedback&lt;/a&gt; before we declare
the Deployments API “final” and “unchangeable.” We expect the preview period to
last for roughly 60-90 days.&lt;/p&gt;

&lt;p&gt;As we discover opportunities to improve the API during the preview period, we
may ship changes that break clients using the preview version of the API. We
want to iterate quickly. To do so, we will announce any changes here (on the
developer blog), but we will not provide any advance notice.&lt;/p&gt;

&lt;p&gt;At the end of preview period, the Deployments API will become an official
component of GitHub API v3. At that point, the new Deployments API will be
stable and suitable for production use.&lt;/p&gt;

&lt;p&gt;We hope you’ll take it for a spin and &lt;a href="https://github.com/contact?form%5Bsubject%5D=Deployments+API"&gt;send us your feedback&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://shipitsquirrel.github.io/images/ship%20it%20squirrel.png" alt="Shipit Squirrel"&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-01-07:/changes/2014-01-07-upcoming-change-to-default-media-type/</id>
    <title type="html">Upcoming Change to Default Media Type</title>
    <published>2014-01-07T08:00:00Z</published>
    <updated>2014-01-07T08:00:00Z</updated>
    <author>
      <name>jasonrudolph</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-01-07-upcoming-change-to-default-media-type/" />
    <content type="html">&lt;p&gt;On April 15, 2014&lt;a href="#cutover-test"&gt;*&lt;/a&gt;, the GitHub API will start serving the v3 media type by default. The information below will help you determine whether your applications will be affected by this change. For affected applications, you’ll find tips below to help you smoothly navigate this change.&lt;/p&gt;

&lt;h2 id="whats-changing"&gt;What’s changing?&lt;/h2&gt;

&lt;h3 id="a-new-default-version"&gt;A new default version&lt;/h3&gt;

&lt;p&gt;There are &lt;a href="/v3/versions"&gt;two versions&lt;/a&gt; of the GitHub API: &lt;strong&gt;beta&lt;/strong&gt; and &lt;strong&gt;v3&lt;/strong&gt;. Today, requests receive the beta version by default. On April 15&lt;a href="#cutover-test"&gt;*&lt;/a&gt;, requests will begin receiving the v3 version by default.&lt;/p&gt;

&lt;p&gt;For the most part, beta and v3 are remarkably similar. There are &lt;a href="/v3/versions/#differences-from-beta-version"&gt;just a few differences&lt;/a&gt; to keep in mind.&lt;/p&gt;

&lt;h3 id="a-new-default-media-type"&gt;A new default media type&lt;/h3&gt;

&lt;p&gt;The version is one part of the &lt;a href="/v3/media"&gt;media type&lt;/a&gt;. By default, the API provides the beta media type:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;application/vnd.github.beta+json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On April 15&lt;a href="#cutover-test"&gt;*&lt;/a&gt;, requests will begin responding with the v3 media type by default:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;application/vnd.github.v3+json
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="who-is-affected"&gt;Who is affected?&lt;/h2&gt;

&lt;p&gt;Since 2012, we have encouraged developers to explicitly &lt;a href="/v3/media/#beta-v3-and-the-future"&gt;request a specific media type via the &lt;code&gt;Accept&lt;/code&gt; header&lt;/a&gt;. If you are requesting either beta or v3 via the &lt;code&gt;Accept&lt;/code&gt; header, then you are &lt;em&gt;not&lt;/em&gt; affected by this change. The API will continue to respond with the requested media type.&lt;/p&gt;

&lt;p&gt;If you are not requesting beta or v3 via the &lt;code&gt;Accept&lt;/code&gt; header, then the API is currently responding with the beta media type. On April 15&lt;a href="#cutover-test"&gt;*&lt;/a&gt;, the API will begin responding with the v3 media type. If your application relies on &lt;a href="/v3/versions/#differences-from-beta-version"&gt;functionality that differs between beta and v3&lt;/a&gt;, then you are affected by this change. You will need to take steps to prepare for the change.&lt;/p&gt;

&lt;h2 id="what-should-you-do"&gt;What should you do?&lt;/h2&gt;

&lt;p&gt;If you are affected by this change, we recommend that you:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Update your applications to depend on the v3 functionality instead of the beta functionality. (If you use one of the popular &lt;a href="/libraries/"&gt;client libraries&lt;/a&gt;, there’s a good chance that they’ve already done the work for you. In that case, you can just update to the latest version of that library.)&lt;/li&gt;
  &lt;li&gt;Request the v3 media type via the &lt;code&gt;Accept&lt;/code&gt; header.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;If you cannot update your application to depend on the v3 functionality by April 15&lt;a href="#cutover-test"&gt;*&lt;/a&gt;, you can just request the beta media type via the &lt;code&gt;Accept&lt;/code&gt; header. Doing so will insulate you from this change.&lt;/p&gt;

&lt;h2 id="cutover-test"&gt;Cutover test on March 12, 2014&lt;/h2&gt;

&lt;p&gt;To help you understand the impact of this change before it becomes permanent, we will temporarily implement this change for a single day on March 12. From approximately 12:01am UTC to 11:59pm UTC on March 12, the API will respond with the v3 media type by default.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href="https://twitter.com/GitHubAPI"&gt;@GitHubAPI&lt;/a&gt; to receive updates before and after the test.&lt;/p&gt;

&lt;h2 id="stay-informed"&gt;Stay informed&lt;/h2&gt;

&lt;p&gt;Depending on the results of the cutover test, we may schedule additional tests before the final cutover on April 15. If so, we’ll to announce them in advance. Be sure to stay tuned to the &lt;a href="/changes"&gt;blog&lt;/a&gt; or follow &lt;a href="https://twitter.com/GitHubAPI"&gt;@GitHubAPI&lt;/a&gt; for updates.&lt;/p&gt;

&lt;p&gt;If you have any questions, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Upcoming+change+to+default+API+media+type"&gt;get in touch&lt;/a&gt;. We’ll be happy to help.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2013-12-13:/changes/2013-12-13-paginating-org-members/</id>
    <title type="html">Paginated results for organization members</title>
    <published>2013-12-13T08:00:00Z</published>
    <updated>2013-12-13T08:00:00Z</updated>
    <author>
      <name>pengwynn</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2013-12-13-paginating-org-members/" />
    <content type="html">&lt;p&gt;The &lt;a href="http://developer.github.com/v3/orgs/members/#members-list"&gt;organization members&lt;/a&gt; and &lt;a href="http://developer.github.com/v3/orgs/members/#public-members-list"&gt;organization public members&lt;/a&gt; methods will soon return paginated results by default. Beginning
today, these methods will paginate if you include &lt;code&gt;page&lt;/code&gt; or &lt;code&gt;per_page&lt;/code&gt; query
parameters. Starting January 15th, 2014, these methods will &lt;em&gt;always&lt;/em&gt; return paginated
results.&lt;/p&gt;

&lt;p&gt;As always, be sure and follow those &lt;a href="http://developer.github.com/v3/#pagination"&gt;Link headers&lt;/a&gt; to get
subsequent results. If you have any questions or run into trouble, feel free to
&lt;a href="https://github.com/contact?form%5Bsubject%5D=API+v3:+Paginating+org+members"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Happy paginating.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2013-11-04:/changes/2013-11-04-releases-api-is-official/</id>
    <title type="html">Releases API is Official</title>
    <published>2013-11-04T08:00:00Z</published>
    <updated>2013-11-04T08:00:00Z</updated>
    <author>
      <name>technoweenie</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2013-11-04-releases-api-is-official/" />
    <content type="html">&lt;p&gt;Hot on the heels of the &lt;a href="http://developer.github.com/changes/2013-10-29-search-api-becomes-an-official-part-of-github-api-v3/"&gt;Search API&lt;/a&gt;, the &lt;a href="/v3/repos/releases/"&gt;Releases API&lt;/a&gt;
is now officially part of GitHub API v3.  We now consider it stable for
production use.  &lt;/p&gt;

&lt;h3 id="preview-media-type-no-longer-needed"&gt;Preview Media Type No Longer Needed&lt;/h3&gt;

&lt;p&gt;If you used the Releases API during the preview period, you needed to provide a custom media type in the &lt;code&gt;Accept&lt;/code&gt; header:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;application/vnd.github.manifold-preview+json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that the preview period has ended, you no longer need to pass this custom media type.&lt;/p&gt;

&lt;p&gt;Instead, we &lt;a href="/v3/media"&gt;recommend&lt;/a&gt; that you specify &lt;code&gt;v3&lt;/code&gt; as the version in the &lt;code&gt;Accept&lt;/code&gt; header:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;application/vnd.github.v3+json
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="onward"&gt;Onward!&lt;/h3&gt;

&lt;p&gt;Thanks again to everyone that tried out the Releases API during the preview period.
We got some great feedback, and we are already discussing additions to the API.&lt;/p&gt;

&lt;p&gt;We can’t wait to see what you ship!&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2013-10-29:/changes/2013-10-29-search-api-becomes-an-official-part-of-github-api-v3/</id>
    <title type="html">Search API Becomes an Official Part of API v3</title>
    <published>2013-10-29T07:00:00Z</published>
    <updated>2013-10-29T07:00:00Z</updated>
    <author>
      <name>jasonrudolph</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2013-10-29-search-api-becomes-an-official-part-of-github-api-v3/" />
    <content type="html">&lt;p&gt;We’re excited to announce that the &lt;a href="/v3/search"&gt;new Search API&lt;/a&gt; has graduated from &lt;a href="/changes/2013-07-19-preview-the-new-search-api/#preview-period"&gt;preview mode&lt;/a&gt;.
As of today, the Search API is an official part of &lt;a href="/v3"&gt;GitHub API v3&lt;/a&gt;.
As such, the Search API is now stable and suitable for production use.&lt;/p&gt;

&lt;h3 id="preview-media-type-no-longer-needed"&gt;Preview Media Type No Longer Needed&lt;/h3&gt;

&lt;p&gt;If you used the Search API during the preview period, you needed to provide a custom media type in the &lt;code&gt;Accept&lt;/code&gt; header:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;application/vnd.github.preview+json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that the preview period has ended, you no longer need to pass this custom media type.&lt;/p&gt;

&lt;p&gt;Instead, we &lt;a href="/v3/media"&gt;recommend&lt;/a&gt; that you specify &lt;code&gt;v3&lt;/code&gt; as the version in the &lt;code&gt;Accept&lt;/code&gt; header:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;application/vnd.github.v3+json
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="onward"&gt;Onward!&lt;/h3&gt;

&lt;p&gt;Thanks again to everyone that tried out the Search API during the preview period.&lt;/p&gt;

&lt;p&gt;We can’t wait to see what you build!&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2013-10-18:/changes/2013-10-18-new-code-search-requirements/</id>
    <title type="html">New Validation Rule for Beta Code Search API</title>
    <published>2013-10-18T07:00:00Z</published>
    <updated>2013-10-18T07:00:00Z</updated>
    <author>
      <name>jasonrudolph</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2013-10-18-new-code-search-requirements/" />
    <content type="html">&lt;p&gt;As we &lt;a href="/changes/2013-09-28-an-update-on-the-new-search-api/"&gt;prepare to end the preview period&lt;/a&gt; for the new search API,
we’re making sure that it’s ready to handle the traffic from all the apps you’ll build on top of it.&lt;/p&gt;

&lt;h2 id="new-validation-rule"&gt;New Validation Rule&lt;/h2&gt;

&lt;p&gt;In order to support the expected volume of requests, we’re applying a new validation rule to the &lt;a href="/v3/search/#search-code"&gt;Code Search API&lt;/a&gt;.
Starting today, you will need to scope your code queries to a specific set of users, organizations, or repositories.&lt;/p&gt;

&lt;p&gt;As usual, you specify the query via the &lt;code&gt;q&lt;/code&gt; parameter.
The value must include &lt;a href="https://help.github.com/articles/searching-code#users-organizations-and-repositories"&gt;at least one user, organization, or repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For example, with this query, we’re searching for code from &lt;a href="https://github.com/twitter"&gt;@twitter&lt;/a&gt; or &lt;a href="https://github.com/facebook"&gt;@facebook&lt;/a&gt; that uses an MIT License:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MIT License user:twitter user:facebook
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And here, we’re looking for uses of the underscore library in &lt;a href="https://github.com/mozilla/BrowserQuest"&gt;@mozilla’s BrowserQuest&lt;/a&gt; repository:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;underscore language:js repo:mozilla/BrowserQuest
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To perform these queries via the API, we would use the following URLs (respectively):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;https://api.github.com/search/code?q=MIT+License+user%3Atwitter+user%3Afacebook

https://api.github.com/search/code?q=underscore+language%3Ajs+repo%3Amozilla%2FBrowserQuest
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;All the various &lt;a href="https://help.github.com/articles/searching-code"&gt;code search qualifiers&lt;/a&gt; are still available to you.
A &lt;a href="https://help.github.com/articles/searching-code#users-organizations-and-repositories"&gt;user, organization, or repository qualifier&lt;/a&gt; is now required.
The other search qualifiers are still optional.&lt;/p&gt;

&lt;h2 id="other-search-types-not-affected"&gt;Other Search Types Not Affected&lt;/h2&gt;

&lt;p&gt;This new validation only applies to the &lt;a href="/v3/search/#search-code"&gt;Code Search API&lt;/a&gt;.
It does not apply to the Search API for &lt;a href="/v3/search/#search-issues"&gt;issues&lt;/a&gt;, &lt;a href="/v3/search/#search-users"&gt;users&lt;/a&gt;, or &lt;a href="/v3/search/#search-repositories"&gt;repositories&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This validation does not affect searches performed on &lt;a href="https://github.com/search"&gt;github.com/search&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;By ensuring that code queries are more targeted in nature, the API will be ready to meet the expected demand from all your apps.
As we continue to tune the Search API, we hope to relax this validation in the future.
There’s no ETA, but we’d like to relax it as soon as it’s feasible.&lt;/p&gt;

&lt;p&gt;As always, if you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=New+Validation+Rule+for+Code+Search+API"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2013-10-08:/changes/2013-10-08-list-all-user-teams/</id>
    <title type="html">List all teams for the authenticated user</title>
    <published>2013-10-08T07:00:00Z</published>
    <updated>2013-10-08T07:00:00Z</updated>
    <author>
      <name>pengwynn</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2013-10-08-list-all-user-teams/" />
    <content type="html">&lt;p&gt;We just added a &lt;a href="/v3/orgs/teams/#list-user-teams"&gt;new API method&lt;/a&gt; to list all
the teams for the authenticated user across all organizations:&lt;/p&gt;

&lt;pre class="terminal"&gt;
$ curl -H "Authorization: token [yours]" https://api.github.com/user/teams

[
  {
    "name": "Testing",
    "id": 396018,
    "slug": "testing",
    "permission": "pull",
    "url": "https://api.github.com/teams/396018",
    "members_url": "https://api.github.com/teams/396018/members{/member}",
    "repositories_url": "https://api.github.com/teams/396018/repos",
    "members_count": 1,
    "repos_count": 0,
    "organization": {
      "login": "dotfiles",
      "id": 1593590,
      "url": "https://api.github.com/orgs/dotfiles",
      "repos_url": "https://api.github.com/orgs/dotfiles/repos",
      "events_url": "https://api.github.com/orgs/dotfiles/events",
      "members_url": "https://api.github.com/orgs/dotfiles/members{/member}",
      "public_members_url": "https://api.github.com/orgs/dotfiles/public_members{/member}",
      "avatar_url": "https://0.gravatar.com/avatar/67d30facf213f62853c119fc2a05e246?d=https%3A%2F%2Fidenticons.github.com%2Fc90a68e6ab739e81c642f0e93f88c722.png"
    }
  },
  ...
]
&lt;/pre&gt;

&lt;p&gt;As always, if you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=API+-+Listing+Teams+for+User"&gt;drop us a line&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2013-10-04:/changes/2013-10-04-oauth-changes-coming/</id>
    <title type="html">OAuth changes coming</title>
    <published>2013-10-04T07:00:00Z</published>
    <updated>2013-10-04T07:00:00Z</updated>
    <author>
      <name>tclem</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2013-10-04-oauth-changes-coming/" />
    <content type="html">&lt;p&gt;Starting today, we are returning granted scopes as part of the
&lt;a href="/v3/oauth/#github-redirects-back-to-your-site"&gt;access_token response&lt;/a&gt;.
For example, if you are making a POST with the &lt;code&gt;application/json&lt;/code&gt;
mime-type you’ll see an additional field for the granted scopes.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-javascript"&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;"access_token"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"e72e16c7e42f292c6912e7710c838347ae178b4a"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"scope"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"repo,gist"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"token_type"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"bearer"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Right now, these scopes will be identical to what you requested, but we
are moving towards a feature set that will allow GitHub users to edit
their scopes, effectively granting your application less access than you
originally requested. You should be aware of this possibility and adjust
your application behavior accordingly.&lt;/p&gt;

&lt;p&gt;Some things to watch out for and keep in mind:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
    &lt;p&gt;Most third party applications using GitHub OAuth to identify users have
the best success in adoption by starting out with a request for the
minimum access that the application can possibly get away with.
Something like no scopes or just &lt;code&gt;user:email&lt;/code&gt; is very sane.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It is important to handle the error cases where a user chooses to
grant you less access than you originally requested. Now that we are
surfacing the granted scopes on the access_token response, applications
can warn or otherwise communicate with their users that they will see
reduced functionality or be unable to perform some actions.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Applications can always send users back through the flow again to get
additional permission, but don’t forget that users can always say no.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2013-09-28:/changes/2013-09-28-an-update-on-the-new-search-api/</id>
    <title type="html">An Update on the New Search API</title>
    <published>2013-09-28T07:00:00Z</published>
    <updated>2013-09-28T07:00:00Z</updated>
    <author>
      <name>jasonrudolph</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2013-09-28-an-update-on-the-new-search-api/" />
    <content type="html">&lt;p&gt;We owe a big “Thank You!” to everyone that has taken the time to try out the &lt;a href="/changes/2013-07-19-preview-the-new-search-api"&gt;new Search API&lt;/a&gt;.
We &lt;code&gt;:heart:&lt;/code&gt; every one of you.
Just as we hoped,
the &lt;a href="/changes/2013-07-19-preview-the-new-search-api/#preview-period"&gt;preview period&lt;/a&gt; has allowed us to see how you want to use the new API,
and it has given us a chance to improve the API before finalizing it.&lt;/p&gt;

&lt;p&gt;In order to incorporate everything that we’ve learned,
we’re going to keep the Search API in &lt;a href="/changes/2013-07-19-preview-the-new-search-api/#preview-period"&gt;preview mode&lt;/a&gt; for a little while longer.
We have a few bugs to squash and a couple performance kinks to iron out.
We’re hard at work on those improvements now,
and we expect to have more news in the coming weeks.&lt;/p&gt;

&lt;p&gt;In the mean time, &lt;a href="https://github.com/contact?form%5Bsubject%5D=New+Search+API"&gt;keep the suggestions coming&lt;/a&gt;!&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2013-09-25:/changes/2013-09-25-releases-api/</id>
    <title type="html">Releases API</title>
    <published>2013-09-25T07:00:00Z</published>
    <updated>2013-09-25T07:00:00Z</updated>
    <author>
      <name>technoweenie</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2013-09-25-releases-api/" />
    <content type="html">&lt;p&gt;This summer we made it easier to &lt;a href="https://github.com/blog/1547-release-your-software"&gt;release your software&lt;/a&gt;.  Today, you can fully automate those releases via the
&lt;a href="http://developer.github.com/v3/repos/releases/"&gt;Releases API Preview&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This API is a little different due to the binary assets.  We use the &lt;code&gt;Accept&lt;/code&gt; header for content negotiation when requesting
a release asset.  Pass a standard API media type to get the API representation:&lt;/p&gt;

&lt;pre class="terminal"&gt;
$ curl -i -H "Authorization: token TOKEN" \
     -H "Accept: application/vnd.github.manifold-preview" \
     "https://uploads.github.com/repos/hubot/singularity/releases/assets/123"

HTTP/1.1 200 OK

{
  "id": 123,
  ...
}
&lt;/pre&gt;

&lt;p&gt;Pass “application/octet-stream” to download the binary content.&lt;/p&gt;

&lt;pre class="terminal"&gt;
$ curl -i -H "Authorization: token TOKEN" \
     -H "Accept: application/octet-stream" \
     "https://uploads.github.com/repos/hubot/singularity/releases/assets/123"

HTTP/1.1 302 Found
&lt;/pre&gt;

&lt;p&gt;Uploads are handled by a single request to a companion “uploads.github.com” service.&lt;/p&gt;

&lt;pre class="terminal"&gt;
$ curl -H "Authorization: token TOKEN" \
     -H "Accept: application/vnd.github.manifold-preview" \
     -H "Content-Type: application/zip" \
     --data-binary @build/mac/package.zip \
     "https://uploads.github.com/repos/hubot/singularity/releases/123/assets?name=1.0.0-mac.zip"
&lt;/pre&gt;

&lt;h2 id="preview-mode"&gt;Preview mode&lt;/h2&gt;

&lt;p&gt;The new API is available as a &lt;a href="http://developer.github.com/v3/repos/releases/#preview-mode"&gt;preview&lt;/a&gt;.  This gives developers a chance to &lt;a href="https://github.com/contact?form%5Bsubject%5D=New+Releases+API"&gt;provide feedback&lt;/a&gt; on the direction of
the API before we freeze changes.  We expect to lift the preview status in 30 days.&lt;/p&gt;

&lt;p&gt;As with &lt;a href="http://developer.github.com/changes/2013-07-19-preview-the-new-search-api/"&gt;the Search API&lt;/a&gt;, we’ll take this opportunity to iterate quickly.  Breaking changes will be announced
on this developer blog without any advance warning.  Once the preview period is over, we’ll consider the Releases API unchangeable.
At that point, it will be stable and suitable for production use.&lt;/p&gt;

&lt;p&gt;The preview media type is “application/vnd.github.manifold-preview”.  &lt;a href="http://en.wikipedia.org/wiki/Eden_Fesi"&gt;Manifold&lt;/a&gt; is
a member of the Avengers, with the ability to teleport through time and space.  He’s the one in the middle holding the spear.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://f.cloud.github.com/assets/21/1210628/ae8556fa-25fc-11e3-986d-0ab522271d43.png" alt="Manifold teleporting the Avengers to a terraformed Mars surface"&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2013-09-03:/changes/2013-09-03-two-factor-authentication/</id>
    <title type="html">Two-Factor Authentication and the API</title>
    <published>2013-09-03T07:00:00Z</published>
    <updated>2013-09-03T07:00:00Z</updated>
    <author>
      <name>mastahyeti</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2013-09-03-two-factor-authentication/" />
    <content type="html">&lt;p&gt;As &lt;a href="https://github.com/blog/1614-two-factor-authentication"&gt;announced earlier today&lt;/a&gt;, GitHub.com now supports two-factor
authentication (2FA) for increased security. For users with this feature
enabled, GitHub.com will prompt for a 2FA code in addition to a username and
password during authentication. We’ve also rolled out some improvements to the
API to ensure that 2FA requirements in the API are consistent with GitHub.com.&lt;/p&gt;

&lt;h2 id="authenticating-with-the-api"&gt;Authenticating with the API&lt;/h2&gt;

&lt;p&gt;For users without 2FA enabled, and for applications using the &lt;a href="/v3/oauth/#web-application-flow"&gt;OAuth web
flow&lt;/a&gt; for authentication, everything is
business as usual. You’ll continue to authenticate with the API just as you
always have. (That was easy.)&lt;/p&gt;

&lt;p&gt;If you enable 2FA &lt;em&gt;and&lt;/em&gt; use Basic Authentication to access the API, we’re
providing multiple options to make the flow simple and easy.&lt;/p&gt;

&lt;h2 id="basic-authentication-and-2fa"&gt;Basic Authentication and 2FA&lt;/h2&gt;

&lt;h3 id="personal-access-tokens"&gt;Personal Access Tokens&lt;/h3&gt;

&lt;p&gt;Personal access tokens provide the simplest option for using 2FA with Basic
Authentication. You can create these tokens via the &lt;a href="https://github.com/settings/applications"&gt;application settings page
on GitHub.com&lt;/a&gt;, and you can revoke
them at any time. For more information about authenticating to the API with
personal access tokens, be sure to check out our &lt;a href="https://help.github.com/articles/creating-an-access-token-for-command-line-use"&gt;help article on the
topic&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="tightly-integrated-2fa"&gt;Tightly-integrated 2FA&lt;/h3&gt;

&lt;p&gt;For developers wishing to integrate GitHub 2FA directly into their application,
the API’s Basic Authentication now supports the &lt;a href="/v3/auth/#working-with-two-factor-authentication"&gt;ability to send the user’s 2FA
code&lt;/a&gt;, in addition to the username and password.&lt;/p&gt;

&lt;h2 id="were-here-to-help"&gt;We’re here to help&lt;/h2&gt;

&lt;p&gt;We think GitHub users are going to love the additional security provided by
two-factor authentication. As always, if you have any questions or feedback,
&lt;a href="https://github.com/contact?form%5Bsubject%5D=2FA+and+the+API"&gt;let us know&lt;/a&gt;. We’re here to help!&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2013-08-20:/changes/2013-08-20-search-api-improvements/</id>
    <title type="html">Improvements to the Search API</title>
    <published>2013-08-20T07:00:00Z</published>
    <updated>2013-08-20T07:00:00Z</updated>
    <author>
      <name>jasonrudolph</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2013-08-20-search-api-improvements/" />
    <content type="html">&lt;p&gt;Today we’re shipping two improvements to the &lt;a href="/changes/2013-07-19-preview-the-new-search-api/"&gt;new Search API&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="more-text-match-metadata"&gt;More Text Match Metadata&lt;/h2&gt;

&lt;p&gt;When searching for code, the API previously provided &lt;a href="/v3/search/#text-match-metadata"&gt;text match metadata&lt;/a&gt; (i.e., “highlights”) for file content.
Now, you can also &lt;a href="/v3/search/#highlighting-code-search-results"&gt;get this metadata&lt;/a&gt; for matches that occur within the file path.&lt;/p&gt;

&lt;p&gt;For example, when &lt;a href="https://github.com/search?q=%40octokit%2Foctokit.rb+in%3Apath+client&amp;amp;type=Code"&gt;searching for files that have “client” in their path&lt;/a&gt;, the results include this match for &lt;code&gt;lib/octokit/client/commits.rb&lt;/code&gt;:&lt;/p&gt;

&lt;pre class="json"&gt;
{
  "name": "commits.rb",
  "path": "lib/octokit/client/commits.rb",
  "text_matches": [
    {
      "object_url": "https://api.github.com/repositories/417862/contents/lib/octokit/client/commits.rb?ref=8d487ab06ccef463aa9f5412a56f1a2f1fa4dc88",
      "object_type": "FileContent",
      "property": "path",
      "fragment": "lib/octokit/client/commits.rb",
      "matches": [
        {
          "text": "client",
          "indices": [ 12, 18 ]
        }
      ]
    }
  ]
  // ...
}
&lt;/pre&gt;

&lt;h2 id="better-text-match-metadata"&gt;Better Text Match Metadata&lt;/h2&gt;

&lt;p&gt;Before today, the API applied HTML entity encoding to all &lt;code&gt;fragment&lt;/code&gt; data.
For example, imagine your search returns an issue like &lt;a href="https://github.com/rails/rails/issues/11889"&gt;rails/rails#11889&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://f.cloud.github.com/assets/2988/994632/a84f2888-09af-11e3-9417-4bd92f1f1ed6.png" alt="Example Issue Title"&gt;&lt;/p&gt;

&lt;p&gt;The response would include a &lt;code&gt;text_matches&lt;/code&gt; array with the following object:&lt;/p&gt;

&lt;pre class="json"&gt;
{
  "fragment": "undefined method `except' for #&amp;amp;lt;Array:XXX&amp;amp;gt;",
  // ...
}
&lt;/pre&gt;

&lt;p&gt;Inside the &lt;code&gt;fragment&lt;/code&gt; value, we see HTML-encoded entities (e.g., &lt;code&gt;&amp;amp;lt;&lt;/code&gt;).
Since we’re returning JSON (not HTML), API clients might not expect any HTML-encoded text.
As of today, the API returns these fragments &lt;em&gt;without&lt;/em&gt; this extraneous encoding.&lt;/p&gt;

&lt;pre class="json"&gt;
{
  "fragment": "undefined method `except' for #&amp;lt;Array:XXX&amp;gt;",
  // ...
}
&lt;/pre&gt;

&lt;h2 id="preview-period"&gt;Preview Period&lt;/h2&gt;

&lt;p&gt;We’re about halfway through the &lt;a href="/changes/2013-07-19-preview-the-new-search-api/#preview-period"&gt;preview period&lt;/a&gt; for the new Search API.
We appreciate everyone that has provided feedback so far. Please &lt;a href="https://github.com/contact?form%5Bsubject%5D=New+Search+API"&gt;keep it coming&lt;/a&gt;!&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2013-07-19:/changes/2013-07-19-preview-the-new-search-api/</id>
    <title type="html">Preview the New Search API</title>
    <published>2013-07-19T07:00:00Z</published>
    <updated>2013-07-19T07:00:00Z</updated>
    <author>
      <name>jasonrudolph</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2013-07-19-preview-the-new-search-api/" />
    <content type="html">&lt;p&gt;Today we’re excited to announce a &lt;a href="/v3/search/"&gt;brand new Search API&lt;/a&gt;. Whether you’re
searching for &lt;a href="/v3/search/#search-code"&gt;code&lt;/a&gt;, &lt;a href="/v3/search/#search-repositories"&gt;repositories&lt;/a&gt;,
&lt;a href="/v3/search/#search-issues"&gt;issues&lt;/a&gt;, or &lt;a href="/v3/search/#search-users"&gt;users&lt;/a&gt;, all the query abilities of
github.com are now available via the API as well.&lt;/p&gt;

&lt;p&gt;Maybe you want to find &lt;a href="/v3/search/#repository-search-example"&gt;popular Tetris implementations written in Assembly&lt;/a&gt;.
We’ve got you covered.
Or perhaps you’re looking for &lt;a href="/v3/search/#code-search-example"&gt;new gems that are using Octokit.rb&lt;/a&gt;.
No problem.
The possibilities are endless.&lt;/p&gt;

&lt;h2 id="highlights"&gt;Highlights&lt;/h2&gt;

&lt;p&gt;On github.com, we enjoy the context provided by code snippets and highlights in
search results.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/search?q=faraday+builder+repo%3Aoctokit%2Foctokit.rb&amp;amp;type=Code"&gt;&lt;img src="https://f.cloud.github.com/assets/865/819651/959a4826-efb5-11e2-8af8-46c4a3857cdf.png" alt="code-snippet-highlighting"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We want API consumers to have access to that information as well. So, API
requests can opt to receive those
&lt;a href="/v3/search#text-match-metadata"&gt;text fragments in the response&lt;/a&gt;. Each fragment is accompanied by
numeric offsets identifying the exact location of each matching search term.&lt;/p&gt;

&lt;h2 id="preview-period"&gt;Preview period&lt;/h2&gt;

&lt;p&gt;We’re making this new API available today for developers to
&lt;a href="/v3/search/#preview-mode" data-proofer-ignore=""&gt;preview&lt;/a&gt;. We think developers are going to love it, but we want
to get your feedback before we declare the Search API “final” and
“unchangeable.” We expect the preview period to last for roughly 60 days.&lt;/p&gt;

&lt;p&gt;As we discover opportunities to improve this new API during the preview period,
we may ship changes that break clients using the preview version of the API. We
want to iterate quickly. To do so, we will announce any changes here (on the
developer blog), but we will not provide any advance notice.&lt;/p&gt;

&lt;p&gt;At the end of preview period, the Search API will become an official component
of GitHub API v3. At that point, the new Search API will be stable and suitable
for production use.&lt;/p&gt;

&lt;h2 id="what-about-the-old-search-api"&gt;What about the old search API?&lt;/h2&gt;

&lt;p&gt;The &lt;a href="/v3/search/legacy/"&gt;legacy search API&lt;/a&gt; is still available. Many existing clients
depend on it, and it is not changing in any way. While the new API offers much
more functionality, the legacy search endpoints remain an official part of
GitHub API v3.&lt;/p&gt;

&lt;h2 id="take-it-for-a-spin"&gt;Take it for a spin&lt;/h2&gt;

&lt;p&gt;We hope you’ll kick the tires and &lt;a href="https://github.com/contact?form%5Bsubject%5D=New+Search+API"&gt;send us your feedback&lt;/a&gt;. Happy
&lt;del&gt;searching&lt;/del&gt; finding!&lt;/p&gt;</content>
  </entry>
</feed>
